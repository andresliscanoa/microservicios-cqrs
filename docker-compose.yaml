version: '3.8'
services:
  app-command:
    build: microservicio-command/
    container_name: app_command
    ports:
      - '8080:8080'
    depends_on:
      - db-command
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-command:5432/postgres
  app-query:
    build: microservicio-query/
    container_name: app_query
    ports:
      - '8081:8080'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db-query:5432/postgres
  db-command:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5432:5432'
    volumes:
      - db_command:/var/lib/postgresql/data
  db-query:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - '5433:5432'
    volumes:
      - db_query:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
volumes:
  db_command:
    driver: local
  db_query:
    driver: local